"use client"

import { useState } from "react"
import { useLanguage } from "@/contexts/language-context"
import { Card, CardContent } from "@/components/ui/card"
import Image from "next/image"

interface LocationInfo {
  name: string
  address: string
  phone: string
  email: string
  courses: string[]
  coordinates: { lat: number; lng: number }
  image?: string
}

interface LocationsData {
  [key: string]: LocationInfo
}

const MapSection = () => {
  const [activeRegion, setActiveRegion] = useState<string | null>("tashkent_city")
  const { t, language } = useLanguage()

  const locations: LocationsData = {
    tashkent_city: {
      name: t("tashkent_city"),
      address: "Amir Temur Straße 107A, Taschkent",
      phone: "+998 71 123 4567",
      email: "tashkent@profideutsch.uz",
      courses: ["Deutsch A1-A2"],
      coordinates: { lat: 41.311081, lng: 69.240562 },
      image: "/images/german-classroom-1.png",
    },
    tashkent_region: {
      name: t("tashkent_region"),
      address: "Yunusabad 4, Taschkent",
      phone: "+998 71 987 6543",
      email: "yunusabad@profideutsch.uz",
      courses: ["Deutsch B1-B2"],
      coordinates: { lat: 41.325902, lng: 69.287749 },
      image: "/images/german-classroom-2.png",
    },
    telc_center: {
      name: t("telc_center"),
      address: "Mirabad District, Taschkent",
      phone: "+998 71 234 5678",
      email: "telc@profideutsch.uz",
      courses: ["TELC Prüfungsvorbereitung A1-C1"],
      coordinates: { lat: 41.316081, lng: 69.268762 },
      image: "/images/german-classroom-3.png",
    },
    ausbildung_center: {
      name: t("ausbildung_center"),
      address: "Chilanzar District, Taschkent",
      phone: "+998 71 345 6789",
      email: "ausbildung@profideutsch.uz",
      courses: ["Ausbildung Vorbereitungskurs", "Berufliche Qualifikation"],
      coordinates: { lat: 41.286902, lng: 69.200649 },
      image: "/images/german-classroom-4.png",
    }
  }

  const regionsList = [
    { id: "tashkent_city", name: t("tashkent_city") },
    { id: "tashkent_region", name: t("tashkent_region") },
    { id: "telc_center", name: t("telc_center") },
    { id: "ausbildung_center", name: t("ausbildung_center") }
  ]

  const handleRegionClick = (regionId: string) => {
    setActiveRegion(regionId)
  }

  return (
    <section className="w-full py-12" id="standorte">
      <div className="container mx-auto px-4">
        <h2 className="text-4xl font-bold text-center mb-12">{t("our_locations")}</h2>
        <div className="grid grid-cols-1 lg:grid-cols-4 gap-6">
          {/* Left side: Region list */}
          <div className="lg:col-span-1">
            <Card>
              <CardContent className="p-6">
                <div className="flex flex-col space-y-2">
                  {regionsList.map((region) => (
                    <div
                      key={region.id}
                      className={`p-3 rounded-md cursor-pointer transition-colors text-lg ${
                        activeRegion === region.id
                          ? "bg-primary text-primary-foreground"
                          : "bg-secondary/50 hover:bg-secondary/60 backdrop-blur-sm"
                      }`}
                      onClick={() => handleRegionClick(region.id)}
                    >
                      {region.name}
                    </div>
                  ))}
                </div>
              </CardContent>
            </Card>
          </div>

          {/* Right side: Map and location details */}
          <div className="lg:col-span-3">
            <Card className="overflow-hidden">
              <CardContent className="p-0">
                {activeRegion && locations[activeRegion] && (
                  <div className="grid grid-cols-1">
                    {/* Image for the location */}
                    {locations[activeRegion].image && (
                      <div className="relative h-[300px]">
                        <Image
                          src={locations[activeRegion].image}
                          alt={locations[activeRegion].name}
                          fill
                          className="object-cover"
                        />
                      </div>
                    )}
                    
                    {/* Map section */}
                    <div className="h-[500px] relative">
                      <iframe
                        src={`https://www.google.com/maps/embed?pb=!1m14!1m12!1m3!1d10000!2d${locations[activeRegion].coordinates.lng}!3d${locations[activeRegion].coordinates.lat}!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!5e0!3m2!1sen!2s!4v1619955076921!5m2!1sen!2s`}
                        width="100%"
                        height="100%"
                        style={{ border: 0 }}
                        allowFullScreen
                        loading="lazy"
                        referrerPolicy="no-referrer-when-downgrade"
                      ></iframe>
                    </div>

                    {/* Location details - now below the map */}
                    <div className="p-6 bg-card border-t">
                      <div className="flex flex-wrap items-start justify-between">
                        <div className="mb-6 w-full">
                          <h3 className="text-2xl font-bold mb-2">{locations[activeRegion]?.name}</h3>
                        </div>

                        <div className="grid grid-cols-1 md:grid-cols-3 gap-6 w-full">
                          <div>
                            <p className="font-medium mb-2">{t("address")}</p>
                            <p className="text-muted-foreground">{locations[activeRegion]?.address}</p>
                          </div>

                          <div>
                            <p className="font-medium mb-2">{t("phone")}</p>
                            <p className="text-muted-foreground">{locations[activeRegion]?.phone}</p>
                            <p className="font-medium mt-4 mb-2">{t("email")}</p>
                            <p className="text-muted-foreground">{locations[activeRegion]?.email}</p>
                          </div>

                          <div>
                            <p className="font-medium mb-2">{t("available_courses")}</p>
                            <ul className="list-disc list-inside text-muted-foreground space-y-1">
                              {locations[activeRegion]?.courses.map((course, index) => (
                                <li key={index}>{course}</li>
                              ))}
                            </ul>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                )}
              </CardContent>
            </Card>
          </div>
        </div>
      </div>
    </section>
  )
}

export default MapSection
